.sequence-board {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: var(--space-xl);
}

.sequence-controls {
  display: flex;
  gap: var(--space-md);
  margin-bottom: var(--space-lg);
}

.control-btn {
  background: var(--surface);
  border: 1px solid var(--border);
  border-radius: var(--radius-lg);
  padding: var(--space-md) var(--space-lg);
  font-size: var(--font-size-base);
  color: var(--text-primary);
  cursor: pointer;
  display: flex;
  align-items: center;
  gap: var(--space-xs);
  transition: all var(--transition-fast);
  min-height: 48px;
  font-weight: 500;
}

.control-btn:hover {
  background: var(--primary);
  color: var(--text-inverse);
  border-color: var(--primary);
  transform: translateY(-1px);
  box-shadow: var(--shadow-md);
}

.control-btn:disabled {
  opacity: 0.5;
  cursor: not-allowed;
  transform: none;
}

.control-btn:disabled:hover {
  background: var(--surface);
  color: var(--text-primary);
  border-color: var(--border);
  transform: none;
  box-shadow: none;
}

.color-grid {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: var(--space-lg);
  max-width: 400px;
  width: 100%;
}

.color-btn {
  aspect-ratio: 1;
  border: 3px solid var(--border);
  border-radius: var(--radius-xl);
  cursor: pointer;
  font-size: var(--font-size-lg);
  font-weight: 600;
  color: var(--text-inverse);
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all var(--transition-fast);
  position: relative;
  min-width: 80px;
  min-height: 80px;
  user-select: none;
  background-size: cover;
  background-position: center;
}

.color-btn[data-color="red"] {
  background-color: var(--game-red);
}

.color-btn[data-color="blue"] {
  background-color: var(--game-blue);
}

.color-btn[data-color="green"] {
  background-color: var(--game-green);
}

.color-btn[data-color="yellow"] {
  background-color: var(--game-yellow);
}

.color-btn:hover {
  transform: scale(1.05);
  box-shadow: var(--shadow-lg);
  border-color: var(--text-inverse);
}

.color-btn:active {
  transform: scale(0.95);
}

.color-btn.active {
  animation: colorPulse 0.6s ease-in-out;
  border-color: var(--text-inverse);
  box-shadow: 0 0 20px rgba(255, 255, 255, 0.5);
}

.color-btn.flash {
  animation: colorFlash 0.8s ease-in-out;
}

.color-btn.correct {
  animation: correctPulse 0.5s ease-in-out;
  border-color: var(--success);
}

.color-btn.incorrect {
  animation: incorrectShake 0.5s ease-in-out;
  border-color: var(--error);
}

.color-btn:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  transform: none;
}

.color-btn .color-name {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
  font-size: var(--font-size-sm);
  color: var(--text-primary);
  font-weight: 600;
  opacity: 0;
  transition: opacity var(--transition-fast);
  pointer-events: none;
}

.color-btn:hover .color-name,
.color-btn:focus .color-name {
  opacity: 1;
}

.sequence-feedback {
  min-height: 60px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: var(--font-size-lg);
  font-weight: 600;
  text-align: center;
  padding: var(--space-md);
  border-radius: var(--radius-lg);
  transition: all var(--transition-normal);
}

.sequence-feedback.success {
  background: var(--success);
  color: var(--text-inverse);
  animation: successSlide 0.5s ease-out;
}

.sequence-feedback.error {
  background: var(--error);
  color: var(--text-inverse);
  animation: errorShake 0.5s ease-out;
}

.sequence-feedback.info {
  background: var(--primary);
  color: var(--text-inverse);
  animation: infoFade 0.3s ease-out;
}

.matching-board {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: var(--space-xl);
}

.matching-controls {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  max-width: 600px;
  margin-bottom: var(--space-lg);
}

.game-stats {
  display: flex;
  gap: var(--space-lg);
  font-size: var(--font-size-base);
  font-weight: 600;
  color: var(--text-secondary);
}

.game-stats span:first-child {
  color: var(--primary);
}

.card-grid {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: var(--space-md);
  max-width: 600px;
  width: 100%;
}

.card {
  aspect-ratio: 1;
  border: 2px solid var(--border);
  border-radius: var(--radius-lg);
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: var(--font-size-2xl);
  background: var(--surface);
  transition: all var(--transition-normal);
  position: relative;
  min-width: 60px;
  min-height: 60px;
  user-select: none;
  perspective: 1000px;
}

.card:hover {
  transform: scale(1.02);
  box-shadow: var(--shadow-md);
  border-color: var(--primary);
}

.card.flipped {
  background: var(--surface-elevated);
  border-color: var(--primary);
  color: var(--text-primary);
  animation: cardFlip 0.6s ease-in-out;
}

.card.matched {
  background: var(--success);
  color: var(--text-inverse);
  border-color: var(--success);
  animation: cardMatch 0.8s ease-in-out;
  cursor: default;
}

.card.matched:hover {
  transform: none;
}

.card.mismatched {
  animation: cardMismatch 0.5s ease-in-out;
}

.card:disabled {
  cursor: not-allowed;
  opacity: 0.7;
}

.card-content {
  transition: all var(--transition-normal);
  transform-style: preserve-3d;
}

.card:not(.flipped) .card-content {
  transform: rotateY(180deg);
}

.card-back {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  background: linear-gradient(135deg, var(--primary) 0%, var(--secondary) 100%);
  color: var(--text-inverse);
  border-radius: var(--radius-lg);
  font-size: var(--font-size-xl);
  backface-visibility: hidden;
}

.card-front {
  backface-visibility: hidden;
  transform: rotateY(180deg);
}

.matching-feedback {
  min-height: 60px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: var(--font-size-lg);
  font-weight: 600;
  text-align: center;
  padding: var(--space-md);
  border-radius: var(--radius-lg);
  transition: all var(--transition-normal);
}

.matching-feedback.success {
  background: var(--success);
  color: var(--text-inverse);
  animation: successBounce 0.6s ease-out;
}

.matching-feedback.error {
  background: var(--error);
  color: var(--text-inverse);
  animation: errorPulse 0.4s ease-out;
}

.matching-feedback.complete {
  background: linear-gradient(135deg, var(--success) 0%, var(--secondary) 100%);
  color: var(--text-inverse);
  animation: completeCelebration 1s ease-out;
}

@keyframes colorPulse {
  0%,
  100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.1);
    box-shadow: 0 0 30px rgba(255, 255, 255, 0.8);
  }
}

@keyframes colorFlash {
  0%,
  100% {
    opacity: 1;
  }
  50% {
    opacity: 0.7;
    transform: scale(1.05);
  }
}

@keyframes correctPulse {
  0%,
  100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.08);
  }
}

@keyframes incorrectShake {
  0%,
  100% {
    transform: translateX(0);
  }
  25% {
    transform: translateX(-5px);
  }
  75% {
    transform: translateX(5px);
  }
}

@keyframes successSlide {
  0% {
    transform: translateY(20px);
    opacity: 0;
  }
  100% {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes errorShake {
  0%,
  100% {
    transform: translateX(0);
  }
  25% {
    transform: translateX(-10px);
  }
  75% {
    transform: translateX(10px);
  }
}

@keyframes infoFade {
  0% {
    opacity: 0;
    transform: scale(0.9);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes cardFlip {
  0% {
    transform: rotateY(0deg);
  }
  50% {
    transform: rotateY(90deg) scale(1.05);
  }
  100% {
    transform: rotateY(180deg);
  }
}

@keyframes cardMatch {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.1) rotate(5deg);
  }
  100% {
    transform: scale(1) rotate(0deg);
  }
}

@keyframes cardMismatch {
  0%,
  100% {
    transform: scale(1) rotate(0deg);
  }
  25% {
    transform: scale(1.02) rotate(-2deg);
  }
  75% {
    transform: scale(1.02) rotate(2deg);
  }
}

@keyframes successBounce {
  0%,
  100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
}

@keyframes errorPulse {
  0%,
  100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.02);
  }
}

@keyframes completeCelebration {
  0% {
    transform: scale(1) rotate(0deg);
  }
  25% {
    transform: scale(1.05) rotate(1deg);
  }
  50% {
    transform: scale(1.1) rotate(-1deg);
  }
  75% {
    transform: scale(1.05) rotate(1deg);
  }
  100% {
    transform: scale(1) rotate(0deg);
  }
}

@keyframes correctPop {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.2);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes incorrectWiggle {
  0%,
  100% {
    transform: rotate(0deg);
  }
  25% {
    transform: rotate(-3deg);
  }
  75% {
    transform: rotate(3deg);
  }
}

@keyframes currentWord {
  0% {
    transform: scale(1);
  }
  100% {
    transform: scale(1.02);
  }
}

.difficulty-easy .color-btn {
  border-width: 4px;
}

.difficulty-medium .color-btn {
  border-width: 3px;
}

.difficulty-hard .color-btn {
  border-width: 2px;
}

.difficulty-adaptive .color-btn {
  border-width: 3px;
  transition: border-width var(--transition-normal);
}

.speed-slow .color-btn.flash {
  animation-duration: 1.2s;
}

.speed-normal .color-btn.flash {
  animation-duration: 0.8s;
}

.speed-fast .color-btn.flash {
  animation-duration: 0.5s;
}

/* Game State Indicators */
.game-waiting .color-btn {
  opacity: 0.7;
  cursor: not-allowed;
}

.game-playing .color-btn {
  opacity: 1;
  cursor: pointer;
}

.game-showing .color-btn {
  cursor: default;
}

.game-paused .color-btn {
  opacity: 0.5;
  cursor: not-allowed;
}

.game-complete .color-btn {
  animation: completePulse 2s ease-in-out infinite;
}

@keyframes completePulse {
  0%,
  100% {
    opacity: 1;
  }
  50% {
    opacity: 0.8;
  }
}

@media (max-width: 768px) {
  .color-grid {
    max-width: 300px;
  }

  .color-btn {
    min-width: 60px;
    min-height: 60px;
    font-size: var(--font-size-base);
  }

  .card-grid {
    max-width: 400px;
  }

  .card {
    min-width: 50px;
    min-height: 50px;
    font-size: var(--font-size-xl);
  }

  .sequence-controls,
  .matching-controls {
    flex-direction: column;
    gap: var(--space-sm);
    align-items: center;
  }

  .control-btn {
    width: 100%;
    max-width: 200px;
    justify-content: center;
  }

  .game-stats {
    flex-direction: column;
    gap: var(--space-sm);
    text-align: center;
  }
}

@media (max-width: 480px) {
  .color-grid {
    max-width: 250px;
    gap: var(--space-sm);
  }

  .color-btn {
    min-width: 50px;
    min-height: 50px;
  }

  .card-grid {
    grid-template-columns: repeat(3, 1fr);
    max-width: 300px;
  }

  .word-display,
  .word-input {
    min-width: 250px;
    font-size: var(--font-size-lg);
  }

  .pattern-grid {
    grid-template-columns: repeat(4, 1fr);
    max-width: 300px;
  }

  .pattern-cell {
    min-width: 35px;
    min-height: 35px;
  }
}
